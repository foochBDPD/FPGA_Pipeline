----------------------------------------------------------------
--	////// TESTBENCH ////////////////////
--This Module is an example of Pipelining
-- 		from textbook Advanced FPGA Design:
-- 		Architecture, and optimization.
-- 		I converted it to VHDL.
--
-- By  : Mike Palladino
-- Date: 8/12/23
----------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
--use std_logic_textio.all;


entity test_pipeline_top is
port(
tb_in_XPower : in std_logic_vector(7 downto 0);
tb_out_clk    : out  std_logic;
tb_out_X     :  out std_logic_vector(7 downto 0)
);
end entity test_pipeline_top; 


architecture RTL of test_pipeline_top is

	





	signal clk  : std_logic := '0';
	
	

  
begin

component power3 is
port(
 Xpower : out std_logic_vector(7 downto 0);
 clk : in std_logic;
 X : in std_logic_vector(7 downto 0)
   );
end component power3;
 


  UUT : power3
        port map (
      XPower  => tb_in_XPower,
      clk     <= tb_out_clk,
      X       => tb_out_X
    );

 --tb_out_clk <= clk; 
  -- Register syncs to align with output data.
  process 
  begin
     wait for 1 ns;
     clk  <= not clk;
    
  end process; 

 -- wait for 900 ns;

--clk <= '1';

--wait for 900 ns;
--tb_out_clk <= clk;
--wait for 900ns;
 
  

  
end architecture RTL;

